version: "2"
services:
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - "kafka"
  kafka:
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
  bot_service:
    container_name: bot_service
    restart: unless-stopped
    env_file: ./bot/.env
    build:
      context: ./bot/.
      dockerfile: Dockerfile
    volumes:
      - bot:/usr/app
      - /usr/app/node_modules
    ports:
      - "8000:8000"
      
  parser_service:
    container_name: parser_service
    restart: unless-stopped
    env_file: ./parser/.env
    build:
      context: ./parser/.
      dockerfile: Dockerfile
    volumes:
      - parser:/usr/app
      - /usr/app/node_modules
    ports:
      - "8001:8001"

  voicer_service:
    container_name: voicer_service
    restart: unless-stopped
    env_file: ./voicer/.env
    build:
      context: ./voicer/.
      dockerfile: Dockerfile
    volumes:
      - voicer:/usr/app
      - /usr/app/node_modules
    ports:
      - "8002:8002"

volumes:
  bot:
  parser:
  voicer: